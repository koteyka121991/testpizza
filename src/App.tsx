

// это реактовский компонент, обязательно называем с большой буквы
// функциональный компонент возвращает html разметку(jsx), без возврата это не функциональный компонент
// внутри {} должен быть написан какой то код, перменая jsx вернет содержимое кода
// npm run start перезагрузка приложения
// npm i sass установка scss
// state состояния (данные)
// хуки позволяют использовать состояние без использования классов , ранее использовались классы
// useState хук для хранения сосояния
// реакт создает вирутальное дерево. Реакт сверяет виртуальное дерево с реальным. Реакт точечно делает перересовку этим самым он оптимизирует отрисовку приложения, тем самым производительность приложения растет 
// в обычном js каждое изменение в дом дереве может затронуть лишнюю память и производительность приложения снижаеться если делать много операций с дом деревом. Реакт не позволяет этого делать
// реакт оптимизирует этот процесс. Тем самым увеличиваеться скорость работы приложения
// https://cssgrid-generator.netlify.app/ для верстки полезный ресурс
// при помощи контекста можно создать глобальное значение и использовать это значение на разных компонентах
// Prop Drilling процес прокидывания пропсов от основного компонента к дочернему через компоненты которые находяться между основным и конечным
// редакс это нечто схожее с контекстом только лучше. При использовании контекста перересовка происходит всего что указано в контексте(во всех компонентаъ к которым привязан контекст)
// При исапользовании редакса значительно уменьшаетья количество кода по сравнению с контекстом, также перересока будет только в том компоненте  котором проиходи изменение , в отличии о контекса 
// редакс рабоает при помощи контекста
// npm install @reduxjs/toolkit react-redux инсталяции редакс

import React from 'react';
import { Route, Routes } from 'react-router-dom';
import Header from "./components/Header";
import MainLayout from './components/MainLayout';
import Cart from './pages/Cart';
import FullPizza from './pages/FullPizza';
// при перемещении компонента можно файл переменовать в index и тогда вэб пак найдет его в указаной пакпе 
import Home from './pages/Home';
import NotFound from './pages/NotFound';
import "./scss/app.scss";

function App() {

  return (


    <Routes>
      <Route path='/' element={<MainLayout />}>
        <Route
          path=""
          element={<Home />}
        />
        <Route
          path="cart"
          element={<Cart />}
        />
        <Route
          //  после : ставим динамический парметр ссылки
          path="pizza/:id"
          element={<FullPizza />}
        />
        <Route
          //  path="*" * ставим чтобы сделать переход на страницу если ни с чем не совпадает 
          path="*"
          element={<NotFound />}
        />

      </Route>

    </Routes>

  );
}

export default App;